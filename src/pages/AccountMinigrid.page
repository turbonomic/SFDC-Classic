<apex:page extensions="AccountMinigrid" standardController="Account" sidebar="false" showHeader="false">
<MiniGrid:GridRelatedListByObject allRows="true" obj="Account" val="{!Account.Id}" disableBulkEdit="{!IF($Profile.Name != 'System Administrator','true','false')}"/>
<script>
    function CF_endProgress() {
        CF_totalProgressWindows--;
        if (CF_totalProgressWindows == 0) {
            if (CF_progressCompleteQueue.length > 0) {
                // we assume everything that happens with the queue will be done using progress windows
                // so that when they finish, the next one can run
                (CF_progressCompleteQueue.shift())();
            } else {
                var dlg = $('#CF_progressDialog');
                if (dlg.dialog('isOpen'))
                    dlg.dialog('close');
            }
        } else if (CF_totalProgressWindows < 0) {
            // set it back to 0 - this extra call happens with things like the attachment upload that show the progress sometimes but hide on each load
            CF_totalProgressWindows = 0;
        //alert('CF_totalProgressWindows < 0?');
        }
        if($("#relationships option").length > 7 ){
            var arr = new Array("Asset (AccountId)","Case","Contact (AccountId)","Event (AccountId)","Lead (Account__c)","Opportunity (AccountId)","Task (AccountId)");
            var sel_val;
            $("#relationships option").each(function(){
                var txt = $(this).text();
                if(txt == "Task (AccountId)"){
                    sel_val = $(this).val();
                    $(this).text("Task (Contact/Lead)");
                }
                if(txt == "Event (AccountId)"){
                    $(this).text("Event (Contact/Lead)");
                }
                if($.inArray(txt,arr) < 0){
                  $(this).remove();  
                }
            });
            $("#relationships").val(sel_val).change();
        }
    }
    function updateRelationship(relPos) {
      if (window['mygrid']) mygrid.CF_clearSearchHistory();
      selRel = [];
      //selRel = rels[relPos - 1];
      selRel = rels[$("#relationships").val()];
      fieldsLoaded[selRel.childSObjectAPIName] = [];
      resetMainGrid();
      //if (relPos == 0) return;
    
       CF_gridGetObjectMeta(selRel.childSObjectAPIName, function(result) {
        handleObjectMetaResults(result);
    
     // make sure parent field is here
     var taf = {};
     taf[selRel.fieldAPIName] = {};
     CF_setGridParam('mygrid', 'hiddenFields', taf);
    
        var templateFields = getTemplateById(selRel.childSObjectAPIName, selectedTemplate[selRel.childSObjectAPIName])[CF_NAMESPACE_PREFIX + 'BulkEditTemplateFields__r'];
    
        var fl = [];
        fieldsLoaded[selRel.childSObjectAPIName] = fl;
        var fieldDef = templateFieldsToFieldDef(fl, templateFields, allFieldsByAPIName[selRel.childSObjectAPIName], selRel.childSObjectAPIName, CF_getGridParam('mygrid', 'hiddenFields'));
    
        addOpenLinkToFieldDef(fieldDef);
    
        buildGrid(fieldDef, loadRecords);
      });
    }
    function postProcessToolbar(toolbar, objType, grid_var) {
        if(grid_var == 'mygrid'){
           
           var profilename = '{!$Profile.Name}';
           
           if(profilename != 'System Administrator'){
               toolbar.splice(3,3);
           }
           
           
            toolbar.push({
                type: "button",
                id: "help",
                img: "Configero/help.png",
                tooltip: "Minigrid Help",
                onClick: function(grid){
                    $("#h_div").dialog({
                         height: 400,
                         width: 600,
                         modal: true
                    });

                }

            });
           
        }
    }
    function doRemoterSearchGetIds(loadPageSize, searchResultsHandler, extraParams) {
        var criteria = getGlobalFilterCriteria(selRel.childSObjectAPIName);
        criteria[selRel.fieldAPIName] = '{!JSENCODE(Account.Id)}';
       {!$RemoteAction.AccountMinigrid.getIdsByCriteria}(selRel.childSObjectAPIName, fieldsLoaded[selRel.childSObjectAPIName], criteria, loadPageSize, searchResultsHandler, extraParams);
    }
</script>


<div id="h_div" title="Minigrid Help" style="display: none;">
<p>
Use the filter button (looks like a funnel with a plus sign on it) to do a global text search.  Then use the broom button to clear the search results.
</p>
<p>
To sort by multiple columns, click to the first column header and then hold down the Shift key while clicking the second column header.
</p>
<p>
You can rearrange the grid by adding, moving, or removing columns and the new setup will be saved as the default for your user account only
</p>
<p>
The following wildcard characters will work in the free text search boxes:
</p>
<p>
<ul>
<li>| means “or” (e.g., “Connect|Conversation”)</li>
<li>&amp; can be used with multi-select pick lists</li>
<li>~ triggers a fuzzy text search (put ~ as the first character)</li>
</ul>
</p>
</div>
</apex:page>